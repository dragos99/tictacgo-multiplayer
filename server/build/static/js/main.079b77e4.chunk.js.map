{"version":3,"sources":["components/CreateGame.js","components/Box.js","components/Cell.js","components/Board.js","models/Cell.js","models/Box.js","components/Game.js","components/App.js","reportWebVitals.js","index.js"],"names":["CreateGame","history","useHistory","useState","username","setUsername","creatingGame","setCreatingGame","localStorage","getItem","id","className","disabled","type","onChange","e","target","value","placeholder","onClick","setItem","fetch","method","mode","cache","headers","body","JSON","stringify","then","res","json","data","push","pathname","gameId","state","Box","props","taken","boxId","children","Cell","cellId","availableTo","lastMove","takeCell","Board","board","map","box","i","cells","cell","j","this","player","sameOwner","length","setupCells","take","getOwner","GameState","Game","opponentUsername","gameState","socket","me","currentPlayer","changeUsername","setState","location","joinGame","substr","emit","applyMove","otherPlayer","updateAvailableCells","updateLastMove","forceUpdate","socketIOClient","on","success","setupBoard","setAvailable","targetBox","symbol","getUsernameOf","window","href","React","Component","withRouter","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079b77e4.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction CreateGame() {\r\n\tconst history = useHistory();\r\n\tconst [username, setUsername] = useState(null);\r\n\tconst [creatingGame, setCreatingGame] = useState(false);\r\n\r\n\tif (username === null) {\r\n\t\tif (localStorage.getItem('username')) {\r\n\t\t\tsetUsername(localStorage.getItem('username'));\r\n\t\t}\r\n\t}\r\n\r\n\tconst changeUsername = (e) => {\r\n\t\tsetUsername(e.target.value);\r\n\t}\r\n\r\n\tconst createGame = () => {\r\n\t\tif (creatingGame) return;\r\n\t\tif (!username) return;\r\n\r\n\t\tlocalStorage.setItem('username', username);\r\n\t\tsetCreatingGame(true);\r\n\r\n\t\tfetch('/createGame', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcache: 'no-cache',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ username })\r\n\t\t}).then(res => res.json()).then((data) => {\r\n\t\t\thistory.push({\r\n\t\t\t\tpathname: `/${data.gameId}`,\r\n\t\t\t\tstate: { username }\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"create-game-container\">\r\n\t\t\t<input className=\"text-field\" disabled={creatingGame} type=\"text\" onChange={changeUsername} placeholder=\"Username\" value={username} />\r\n\t\t\t<button className=\"big-button\" disabled={creatingGame} id=\"create-game-button\" onClick={createGame}>Create game</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CreateGame;\r\n","function Box(props) {\r\n\tconst { boxId, taken } = props.data;\r\n\tlet className = 'box';\r\n\t\r\n\tif (taken === 'X') {\r\n\t\tclassName += ' x-taken';\r\n\t} else if (taken === '0') {\r\n\t\tclassName += ' o-taken';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t{!taken && props.children}\r\n\t\t\t{taken ? taken : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Box;","function Cell(props) {\r\n\tconst { boxId, cellId, taken, availableTo, lastMove } = props.data;\r\n\tlet className = 'cell';\r\n\r\n\tif (taken === 'X') {\r\n\t\tclassName += ' x-taken';\r\n\t} else if (taken === '0') {\r\n\t\tclassName += ' o-taken';\r\n\t}\r\n\r\n\tif (availableTo === 'X' || lastMove === 'X') {\r\n\t\tclassName += ' x-available'\r\n\t} else if (availableTo === '0' || lastMove === '0') {\r\n\t\tclassName += ' o-available';\r\n\t}\r\n\r\n\tconst takeCell = () => {\r\n\t\tif (!taken && availableTo) {\r\n\t\t\tprops.takeCell(boxId, cellId);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={className} onClick={takeCell}>\r\n\t\t\t{taken}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Cell;","import '../css/Game.css';\r\nimport React from 'react';\r\nimport Box from './Box';\r\nimport Cell from './Cell';\r\n\r\nfunction Board(props) {\r\n\treturn (\r\n\t\t<div id=\"board\">\r\n\t\t\t{props.board.map((box, i) => (\r\n\t\t\t\t<Box key={i} data={box}>\r\n\t\t\t\t\t{box.cells.map((cell, j) => (\r\n\t\t\t\t\t\t<Cell key={j} data={cell} takeCell={props.takeCell} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Board;\r\n","class Cell {\r\n\tconstructor(boxId, cellId) {\r\n\t\tthis.boxId = boxId;\r\n\t\tthis.cellId = cellId;\r\n\t\tthis.taken = '';\r\n\t\tthis.availableTo = null;\r\n\t\tthis.lastMove = null;\r\n\t}\r\n\r\n\ttake(player) {\r\n\t\tthis.taken = player;\r\n\t}\r\n}\r\n\r\nexport default Cell;","import Cell from './Cell';\r\n\r\nclass Box {\r\n\tconstructor(boxId) {\r\n\t\tthis.boxId = boxId;\r\n\t\tthis.cells = [];\r\n\t\tthis.taken = null; // null or X or 0\r\n\r\n\t\tthis.setupCells();\r\n\t}\r\n\r\n\tsetupCells() {\r\n\t\tfor (let i = 0; i < 9; ++i) {\r\n\t\t\tthis.cells.push(new Cell(this.boxId, i));\r\n\t\t}\r\n\t}\r\n\r\n\ttakeCell(cellId, player) {\r\n\t\tthis.cells[cellId].take(player);\r\n\t\tthis.taken = this.getOwner();\r\n\t}\r\n\r\n\tsetAvailable(player) {\r\n\t\tif (this.taken) return;\r\n\t\tfor (const cell of this.cells) {\r\n\t\t\tif (!cell.taken || !player) {\r\n\t\t\t\tcell.availableTo = player;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetOwner() {\r\n\t\t// rows\r\n\t\tfor (let i = 0; i < 3; ++i) {\r\n\t\t\tif (sameOwner(this.cells[i*3], this.cells[i*3+1], this.cells[i*3+2])) return this.cells[i*3].taken;\r\n\t\t}\r\n\t\t// columns\r\n\t\tfor (let i = 0; i < 3; ++i) {\r\n\t\t\tif (sameOwner(this.cells[i], this.cells[i+3], this.cells[i+6])) return this.cells[i].taken;\r\n\t\t}\r\n\t\t// diagonals\r\n\t\tif (sameOwner(this.cells[0], this.cells[4], this.cells[8])) return this.cells[4].taken;\r\n\t\tif (sameOwner(this.cells[2], this.cells[4], this.cells[6])) return this.cells[4].taken;\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction sameOwner(...cells) {\r\n\tif (!cells[0].taken) return false;\r\n\tfor (let i = 1; i < cells.length; ++i) {\r\n\t\tif (cells[i].taken !== cells[0].taken) return false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport default Box;","import '../css/Game.css';\nimport React from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router';\nimport Board from './Board';\nimport Box from '../models/Box';\n\nconst GameState = {\n\tCONNECT: 'Connecting',\n\tCHOOSE_USERNAME: 'Choose a username',\n\tJOIN: 'Joining game',\n\tWAIT: 'Waiting for opponent',\n\tPLAY: 'Playing',\n};\n\nclass Game extends React.Component {\n\tstate = {\n\t\tusername: '',\n\t\topponentUsername: '',\n\t\tgameState: GameState.CONNECT,\n\t};\n\n\tsocket = null;\n\tboard = null;\n\tme = null; // X or 0\n\tcurrentPlayer = 'X';\n\tlastMove = null;\n\n\tcomponentDidMount() {\n\t\tthis.socket = socketIOClient();\n\n\t\tthis.socket.on('connect', () => {\n\t\t\tthis.setUsername();\n\t\t});\n\n\t\tthis.socket.on('joinGame', (data) => {\n\t\t\tif (data.success) this.setState({ gameState: GameState.WAIT });\n\t\t});\n\n\t\tthis.socket.on('player', (data) => {\n\t\t\tthis.me = data;\n\t\t});\n\n\t\tthis.socket.on('opponent', (data) => {\n\t\t\tthis.setState({ opponentUsername: data });\n\t\t});\n\n\t\tthis.socket.on('startGame', () => {\n\t\t\tthis.setState({ gameState: GameState.PLAY });\n\t\t});\n\n\t\tthis.socket.on('takeCell', (data) => {\n\t\t\tthis.applyMove(data.boxId, data.cellId, data.player);\n\t\t})\n\n\t\tthis.setupBoard();\n\t}\n\n\tsetupBoard() {\n\t\tthis.board = [];\n\t\tfor (let i = 0; i < 9; ++i) {\n\t\t\tthis.board.push(new Box(i));\n\t\t}\n\t\tthis.updateAvailableCells();\n\t}\n\n\tchangeUsername = (e) => {\n\t\tthis.setState({ username: e.target.value });\n\t}\n\n\tsetUsername = () => {\n\t\tconst location = this.props.location;\n\t\tif (location.state && location.state.username) {\n\t\t\tthis.setState({ username: location.state.username }, this.joinGame);\n\t\t} else {\n\t\t\tconst username = localStorage.getItem('username');\n\t\t\tthis.setState({ username, gameState: GameState.CHOOSE_USERNAME });\n\t\t}\n\t}\n\n\tjoinGame = () => {\n\t\tlocalStorage.setItem('username', this.state.username);\n\t\tthis.setState({ gameState: GameState.JOIN }, () => {\n\t\t\tconst gameId = this.props.location.pathname.substr(1);\n\t\t\tconst username = this.state.username;\n\t\t\tthis.socket.emit('joinGame', { gameId, username });\n\t\t});\n\t}\n\n\ttakeCell = (boxId, cellId) => {\n\t\tif (this.currentPlayer !== this.me) return;\n\t\tthis.socket.emit('takeCell', { boxId, cellId, player: this.me });\n\t\tthis.applyMove(boxId, cellId, this.me);\n\t}\n\n\tapplyMove = (boxId, cellId, player) => {\n\t\tthis.board[boxId].takeCell(cellId, player);\n\t\tthis.currentPlayer = this.otherPlayer(player);\n\t\tthis.lastMove = { boxId, cellId, player };\n\t\tthis.updateAvailableCells();\n\t\tthis.updateLastMove();\n\t\tthis.forceUpdate();\n\t}\n\n\tupdateAvailableCells() {\n\t\tfor (const box of this.board) box.setAvailable(null);\n\n\t\tlet targetBox = null;\n\t\tif (this.lastMove) {\n\t\t\ttargetBox = this.board[this.lastMove.cellId];\n\t\t}\n\n\t\tif (!targetBox || targetBox.taken) {\n\t\t\tfor (const box of this.board) {\n\t\t\t\tbox.setAvailable(this.currentPlayer);\n\t\t\t}\n\t\t} else {\n\t\t\ttargetBox.setAvailable(this.currentPlayer);\n\t\t}\n\t}\n\n\tupdateLastMove() {\n\t\tfor (const box of this.board) {\n\t\t\tfor (const cell of box.cells) {\n\t\t\t\tcell.lastMove = null;\n\t\t\t}\n\t\t}\n\t\tthis.board[this.lastMove.boxId].cells[this.lastMove.cellId].lastMove = this.lastMove.player;\n\t}\n\n\totherPlayer(player) {\n\t\tif (player === 'X') return '0';\n\t\treturn 'X';\n\t}\n\n\tgetUsernameOf(symbol) {\n\t\tif (this.me === symbol) {\n\t\t\treturn this.state.username;\n\t\t} else {\n\t\t\treturn this.state.opponentUsername;\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.state.gameState === GameState.CHOOSE_USERNAME) {\n\t\t\treturn (\n\t\t\t\t<div id=\"create-game-container\">\n\t\t\t\t\t<input className=\"text-field\" type=\"text\" onChange={this.changeUsername} placeholder=\"Username\" value={this.state.username} />\n\t\t\t\t\t<button className=\"big-button\" id=\"join-game-button\" onClick={this.joinGame}>Join game</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (this.state.gameState === GameState.PLAY) {\n\t\t\treturn (\n\t\t\t\t<div id=\"game\">\n\t\t\t\t\t<div id=\"header\">\n\t\t\t\t\t\t<div className=\"playerName x\">{this.getUsernameOf('X')}</div>\n\t\t\t\t\t\t<div className=\"versus\">vs</div>\n\t\t\t\t\t\t<div className=\"playerName o\">{this.getUsernameOf('0')}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Board board={this.board} currentPlayer={this.currentPlayer} takeCell={this.takeCell} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (this.state.gameState === GameState.WAIT) {\n\t\t\treturn (<div className=\"game-modal\">\n\t\t\t\t<div className=\"waiting-for-opponent\">Waiting for opponent...</div>\n\t\t\t\t<div className=\"give-link\">Give your friend this link:</div>\n\t\t\t\t<div className=\"game-link\">{window.location.href}</div>\n\t\t\t</div>);\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport default withRouter(Game);\n","import '../css/App.css';\r\nimport CreateGame from './CreateGame';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n} from 'react-router-dom';\r\nimport Game from './Game';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/:id'>\r\n\t\t\t\t\t<Game />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/'>\r\n\t\t\t\t\t<CreateGame />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './css/reset.css';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}