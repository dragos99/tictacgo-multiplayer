{"version":3,"sources":["components/CreateGame.js","components/Box.js","components/Cell.js","components/Board.js","models/Cell.js","models/Box.js","components/Game.js","components/App.js","reportWebVitals.js","index.js"],"names":["CreateGame","history","useHistory","useState","username","setUsername","creatingGame","setCreatingGame","id","className","disabled","type","onChange","e","target","value","placeholder","onClick","fetch","method","mode","cache","headers","body","JSON","stringify","then","res","json","data","push","pathname","gameId","state","Box","props","taken","boxId","children","Cell","cellId","availableTo","lastMove","takeCell","Board","board","map","box","i","cells","cell","j","this","player","sameOwner","length","setupCells","take","getOwner","GameState","Game","gameState","socket","me","currentPlayer","changeUsername","setState","location","joinGame","substr","emit","applyMove","otherPlayer","updateAvailableCells","updateLastMove","forceUpdate","socketIOClient","on","success","setupBoard","setAvailable","targetBox","window","href","React","Component","withRouter","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4974d28.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction CreateGame() {\r\n\tconst history = useHistory();\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [creatingGame, setCreatingGame] = useState(false);\r\n\r\n\tconst changeUsername = (e) => {\r\n\t\tsetUsername(e.target.value);\r\n\t}\r\n\r\n\tconst createGame = () => {\r\n\t\tif (creatingGame) return;\r\n\t\tif (!username) return;\r\n\r\n\t\tsetCreatingGame(true);\r\n\r\n\t\tfetch('/createGame', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tmode: 'cors',\r\n\t\t\tcache: 'no-cache',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({ username })\r\n\t\t}).then(res => res.json()).then((data) => {\r\n\t\t\thistory.push({\r\n\t\t\t\tpathname: `/${data.gameId}`,\r\n\t\t\t\tstate: { username }\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id=\"create-game-container\">\r\n\t\t\t<input className=\"text-field\" disabled={creatingGame} type=\"text\" onChange={changeUsername} placeholder=\"Username\" />\r\n\t\t\t<button className=\"big-button\" disabled={creatingGame} id=\"create-game-button\" onClick={createGame}>Create game</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CreateGame;\r\n","function Box(props) {\r\n\tconst { boxId, taken } = props.data;\r\n\tlet className = 'box';\r\n\t\r\n\tif (taken === 'X') {\r\n\t\tclassName += ' x-taken';\r\n\t} else if (taken === '0') {\r\n\t\tclassName += ' o-taken';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t{!taken && props.children}\r\n\t\t\t{taken ? taken : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Box;","function Cell(props) {\r\n\tconst { boxId, cellId, taken, availableTo, lastMove } = props.data;\r\n\tlet className = 'cell';\r\n\r\n\tif (taken === 'X') {\r\n\t\tclassName += ' x-taken';\r\n\t} else if (taken === '0') {\r\n\t\tclassName += ' o-taken';\r\n\t}\r\n\r\n\tif (availableTo === 'X' || lastMove === 'X') {\r\n\t\tclassName += ' x-available'\r\n\t} else if (availableTo === '0' || lastMove === '0') {\r\n\t\tclassName += ' o-available';\r\n\t}\r\n\r\n\tconst takeCell = () => {\r\n\t\tif (!taken && availableTo) {\r\n\t\t\tprops.takeCell(boxId, cellId);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={className} onClick={takeCell}>\r\n\t\t\t{taken}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Cell;","import '../css/Game.css';\r\nimport React from 'react';\r\nimport Box from './Box';\r\nimport Cell from './Cell';\r\n\r\nfunction Board(props) {\r\n\treturn (\r\n\t\t<div id=\"board\">\r\n\t\t\t{props.board.map((box, i) => (\r\n\t\t\t\t<Box key={i} data={box}>\r\n\t\t\t\t\t{box.cells.map((cell, j) => (\r\n\t\t\t\t\t\t<Cell key={j} data={cell} takeCell={props.takeCell} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Box>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Board;\r\n","class Cell {\r\n\tconstructor(boxId, cellId) {\r\n\t\tthis.boxId = boxId;\r\n\t\tthis.cellId = cellId;\r\n\t\tthis.taken = '';\r\n\t\tthis.availableTo = null;\r\n\t\tthis.lastMove = null;\r\n\t}\r\n\r\n\ttake(player) {\r\n\t\tthis.taken = player;\r\n\t}\r\n}\r\n\r\nexport default Cell;","import Cell from './Cell';\r\n\r\nclass Box {\r\n\tconstructor(boxId) {\r\n\t\tthis.boxId = boxId;\r\n\t\tthis.cells = [];\r\n\t\tthis.taken = null; // null or X or 0\r\n\r\n\t\tthis.setupCells();\r\n\t}\r\n\r\n\tsetupCells() {\r\n\t\tfor (let i = 0; i < 9; ++i) {\r\n\t\t\tthis.cells.push(new Cell(this.boxId, i));\r\n\t\t}\r\n\t}\r\n\r\n\ttakeCell(cellId, player) {\r\n\t\tthis.cells[cellId].take(player);\r\n\t\tthis.taken = this.getOwner();\r\n\t}\r\n\r\n\tsetAvailable(player) {\r\n\t\tif (this.taken) return;\r\n\t\tfor (const cell of this.cells) {\r\n\t\t\tif (!cell.taken || !player) {\r\n\t\t\t\tcell.availableTo = player;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetOwner() {\r\n\t\t// rows\r\n\t\tfor (let i = 0; i < 3; ++i) {\r\n\t\t\tif (sameOwner(this.cells[i*3], this.cells[i*3+1], this.cells[i*3+2])) return this.cells[i*3].taken;\r\n\t\t}\r\n\t\t// columns\r\n\t\tfor (let i = 0; i < 3; ++i) {\r\n\t\t\tif (sameOwner(this.cells[i], this.cells[i+3], this.cells[i+6])) return this.cells[i].taken;\r\n\t\t}\r\n\t\t// diagonals\r\n\t\tif (sameOwner(this.cells[0], this.cells[4], this.cells[8])) return this.cells[4].taken;\r\n\t\tif (sameOwner(this.cells[2], this.cells[4], this.cells[6])) return this.cells[4].taken;\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction sameOwner(...cells) {\r\n\tif (!cells[0].taken) return false;\r\n\tfor (let i = 1; i < cells.length; ++i) {\r\n\t\tif (cells[i].taken !== cells[0].taken) return false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport default Box;","import '../css/Game.css';\nimport React from 'react';\nimport socketIOClient from 'socket.io-client';\nimport { withRouter } from 'react-router';\nimport Board from './Board';\nimport Box from '../models/Box';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst GameState = {\n    CONNECT: 'Connecting',\n    CHOOSE_USERNAME: 'Choose a username',\n    JOIN: 'Joining game',\n    WAIT: 'Waiting for opponent',\n    PLAY: 'Playing',\n};\n\nclass Game extends React.Component {\n    state = {\n        username: '',\n        gameState: GameState.CONNECT,\n    };\n\n    socket = null;\n    board = null;\n    me = null; // X or 0\n    currentPlayer = 'X';\n    lastMove = null;\n\n    componentDidMount() {\n        this.socket = socketIOClient();\n\n        this.socket.on('connect', () => {\n            this.setUsername();\n        });\n\n        this.socket.on('joinGame', (data) => {\n            if (data.success) this.setState({ gameState: GameState.WAIT });\n        });\n\n        this.socket.on('player', (data) => {\n            this.me = data;\n        });\n\n        this.socket.on('startGame', () => {\n            this.setState({ gameState: GameState.PLAY });\n        });\n\n        this.socket.on('takeCell', (data) => {\n            this.applyMove(data.boxId, data.cellId, data.player);\n        })\n\n        this.setupBoard();\n    }\n\n    setupBoard() {\n        this.board = [];\n        for (let i = 0; i < 9; ++i) {\n            this.board.push(new Box(i));\n        }\n        this.updateAvailableCells();\n    }\n\n    changeUsername = (e) => {\n        this.setState({ username: e.target.value });\n    }\n\n    setUsername = () => {\n        const location = this.props.location;\n        if (location.state && location.state.username) {\n            this.setState({ username: location.state.username }, this.joinGame);\n        } else {\n            this.setState({ gameState: GameState.CHOOSE_USERNAME });\n        }\n    }\n\n    joinGame = () => {\n        this.setState({ gameState: GameState.JOIN }, () => {\n            const gameId = this.props.location.pathname.substr(1);\n            const username = this.state.username;\n            this.socket.emit('joinGame', { gameId, username });\n        });\n    }\n\n    takeCell = (boxId, cellId) => {\n        if (this.currentPlayer !== this.me) return;\n        this.socket.emit('takeCell', { boxId, cellId, player: this.me });\n        this.applyMove(boxId, cellId, this.me);\n    }\n\n    applyMove = (boxId, cellId, player) => {\n        this.board[boxId].takeCell(cellId, player);\n        this.currentPlayer = this.otherPlayer(player);\n        this.lastMove = { boxId, cellId, player };\n        this.updateAvailableCells();\n        this.updateLastMove();\n        this.forceUpdate();\n    }\n\n    updateAvailableCells() {\n        for (const box of this.board) box.setAvailable(null);\n\n        let targetBox = null;\n        if (this.lastMove) {\n            targetBox = this.board[this.lastMove.cellId];\n        }\n\n        if (!targetBox || targetBox.taken) {\n            for (const box of this.board) {\n                box.setAvailable(this.currentPlayer);\n            }\n        } else {\n            targetBox.setAvailable(this.currentPlayer);\n        }\n    }\n\n    updateLastMove() {\n        for (const box of this.board) {\n            for (const cell of box.cells) {\n                cell.lastMove = null;\n            }\n        }\n        this.board[this.lastMove.boxId].cells[this.lastMove.cellId].lastMove = this.lastMove.player;\n    }\n\n    otherPlayer(player) {\n        if (player === 'X') return '0';\n        return 'X';\n    }\n\n    render() {\n        if (this.state.gameState === GameState.CHOOSE_USERNAME) {\n            return (\n                <div id=\"create-game-container\">\n                    <input className=\"text-field\" type=\"text\" onChange={this.changeUsername} placeholder=\"Username\" />\n                    <button className=\"big-button\" id=\"join-game-button\" onClick={this.joinGame}>Join game</button>\n                </div>\n            );\n        }\n\n        if (this.state.gameState === GameState.PLAY) {\n            return (\n                <div id=\"game\">\n                    <div id=\"header\">\n                        <div className=\"playerName x\">smokie</div>\n                        <div className=\"versus\">vs</div>\n                        <div className=\"playerName o\">Meh</div>\n                    </div>\n                    <Board board={this.board} currentPlayer={this.currentPlayer} takeCell={this.takeCell} />\n                </div>\n            );\n        }\n\n        if (this.state.gameState === GameState.WAIT) {\n            return (<div className=\"game-modal\">\n                <div className=\"waiting-for-opponent\">Waiting for opponent...</div>\n                <div className=\"give-link\">Give your friend this link:</div>\n                <div className=\"game-link\">{window.location.href}</div>\n            </div>);\n        }\n\n        return null;\n    }\n}\n\nexport default withRouter(Game);\n","import '../css/App.css';\r\nimport CreateGame from './CreateGame';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tSwitch,\r\n\tRoute,\r\n} from 'react-router-dom';\r\nimport Game from './Game';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/:id'>\r\n\t\t\t\t\t<Game />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path='/'>\r\n\t\t\t\t\t<CreateGame />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './css/reset.css';\nimport './css/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}